services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ai-call-app
    environment:
      - NODE_ENV=production
      - HOST=0.0.0.0
      - PORT=3000
    expose:
      - "3000"
    depends_on:
      - db
    restart: unless-stopped

  db:
    image: postgres:16-alpine
    container_name: ai-call-postgres
    environment:
      - POSTGRES_USER=ai
      - POSTGRES_PASSWORD=ai
      - POSTGRES_DB=aicall
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: unless-stopped

  bot:
    build:
      context: .
      dockerfile: bot/Dockerfile
    container_name: ai-call-bot
    depends_on:
      - db
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://ai:ai@db:5432/aicall
    restart: unless-stopped

  nginx:
    image: nginx:1.27-alpine
    container_name: ai-call-nginx
    depends_on:
      - app
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./public:/usr/share/nginx/html:ro
      - certbot-etc:/etc/letsencrypt
      - certbot-www:/var/www/certbot
    restart: unless-stopped

  certbot:
    image: certbot/certbot
    container_name: ai-call-certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-www:/var/www/certbot

volumes:
  certbot-etc:
  certbot-www:
  pgdata:
